// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("FRONVO_PRISMA_URL")
}

model Account {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  profileId             String    @unique
  email                 String    @unique
  username              String
  bio                   String    @default("")
  password              String
  avatar                String    @default("")
  banner                String    @default("")
  creationDate          DateTime  @default(now())
  status                String    @default("")
  statusUpdatedTime     DateTime?
  pendingFriendRequests Json[]
  friends               Json[]
  seenStates            Json?     @default("{}")
  dataSentTime          DateTime?
  turbo                 Boolean?  @default(false)
  turboCH               String?
  fcm                   String?   @default("")
  hasSpotify            Boolean?  @default(false)
  spotifyName           String?   @default("")
  spotifyURL            String?   @default("")
  spotifyRefreshToken   String?   @default("")
  spotifyAccessToken    String?   @default("")
  spotifyTokenType      String?   @default("")
  hasGithub             Boolean?  @default(false)
  githubName            String?   @default("")
  githubURL             String?   @default("")
}

model Post {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  postId       String   @unique
  author       String
  attachment   String?  @default("")
  creationDate DateTime @default(now())
  likes        Json[]
}

model Dm {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  roomId        String   @unique
  lastMessageAt DateTime @default(now())
  dmUsers       Json[]
  dmHiddenFor   Json[]
}

model Server {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  ownerId         String?
  serverId        String    @unique
  name            String?
  icon            String?   @default("")
  invite          String?   @unique
  invitesDisabled Boolean?  @default(false)
  creationDate    DateTime? @default(now())
  members         Json[]
  channels        Json[]
  roles           Json[]
  bannedMembers   Json[]
}

model Channel {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  channelId    String   @unique
  name         String?
  creationDate DateTime @default(now())
}

model Role {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  serverId     String?
  roleId       String   @unique
  creationDate DateTime @default(now())
  color        String
}

model Message {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId      String
  roomId       String
  messageId    String   @unique
  content      String?
  creationDate DateTime @default(now())
  isReply      Boolean  @default(false)
  replyId      String   @default("")
  isImage      Boolean  @default(false)
  attachment   String?
  width        Int?     @default(0)
  height       Int?     @default(0)
  isSpotify    Boolean? @default(false)
  spotifyEmbed String?  @default("")
  isTenor      Boolean  @default(false)
  tenorUrl     String?  @default("")
  isPost       Boolean? @default(false)
  postId       String?  @default("")
}

model ChannelMessage {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId      String
  channelId    String
  messageId    String   @unique
  content      String?
  creationDate DateTime @default(now())
  isReply      Boolean  @default(false)
  replyId      String   @default("")
  isImage      Boolean  @default(false)
  attachment   String?
  width        Int?     @default(0)
  height       Int?     @default(0)
  isSpotify    Boolean? @default(false)
  spotifyEmbed String?  @default("")
  isTenor      Boolean  @default(false)
  tenorUrl     String?  @default("")
}

model Token {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  token     String @unique
  profileId String @unique
}

// what could this possibly mean!?
model Bot {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String   @unique
  description  String   @default("")
  icon         String   @default("")
  creationDate DateTime @default(now())
}

model Log {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  info      String
  timestamp DateTime @default(now())
}
